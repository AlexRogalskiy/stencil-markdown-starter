{"srcPath":"./src/docs-md/guides/router.md","content":"<h1 id=\"stencil-router\">Stencil Router</h1>\n<p><code>@stencil/router</code> is a package on NPM that contains a router that can be used in Stencil apps.</p>\n<p>The developer experience of the router is designed to be similar to <a href=\"https://reacttraining.com/react-router/\">React Router</a>, and it should make it easy to build apps of all size, from the very simple to the very complex.</p>\n<h2 id=\"installing\">Installing</h2>\n<p>In your project directory, run <code>npm install @stencil/router --save</code>. Then add <code>import &#39;@stencil/router&#39;</code> to your root component (normally the <code>my-app</code> component if you are using one of the starters).</p>\n<h2 id=\"included-components\">Included components</h2>\n<ul>\n<li><p><strong>stencil-router</strong></p>\n<p>You should have one single stencil-router component in your project.  This component controls all interactions with the browser history and it aggregates updates through an event system.</p>\n</li>\n<li><p><strong>stencil-route</strong></p>\n<p>This component renders based on whether the supplied url matches the current location.</p>\n<p><em>properties</em>:</p>\n<ul>\n<li><strong>url</strong> (<em>Array || string</em>): the pathnames to match on. Can also pass an array of paths so one stencil-route matches multiple paths. Accepts paths similar to expressjs so that you can define parameters in the url <code>/foo/:bar</code> where bar would be available in incoming props.</li>\n<li><strong>component</strong> (<em>string</em>): the component name that you would like the route to render.</li>\n<li><strong>componentProps</strong> (<em>key/value Object</em>): a key value object(<code>{ &#39;red&#39;: true, &#39;blue&#39;: &#39;white&#39;}</code>) containing props that should be passed to the defined component when rendered.</li>\n<li><strong>routeRender</strong> (<em>function</em>): function that accepts props as an argument. If this exists it will be used in place of the component defined.</li>\n<li><strong>exact</strong> (<em>boolean</em>): If true then only render this route when the url matches exactly to the location, if false it will render if the current url &#39;matches&#39; the url defined.</li>\n</ul>\n</li>\n<li><p><strong>stencil-route-link</strong></p>\n<p>This component is used to render links to defined routes.  It applies a specific style based on whether the link matches the current location.</p>\n<p><em>properties</em>:</p>\n<ul>\n<li><strong>url</strong> (<em>string</em>): the pathname to link to.</li>\n<li><strong>exact</strong> (<em>boolean</em>): If true then only apply the active class when the url matches exactly to the location.</li>\n<li><strong>activeClass</strong> (<em>string</em>): The class to apply if the link matches the current location. This defaults to &#39;link-active&#39;.</li>\n</ul>\n</li>\n<li><p><strong>stencil-route-redirect</strong></p>\n<p>This component redirects the current location.</p>\n<p><em>properties</em>:</p>\n<ul>\n<li><strong>url</strong> (<em>string</em>): the url to redirect to.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"configuring-the-router\">Configuring the Router</h2>\n<p>Applications built with Stencil should have one <code>stencil-router</code> element for the entire application. Make sure to specify an <code>id</code> attribute on it.</p>\n\n<highlight-code-line >\n  <pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-router</span><span class=\"token punctuation\">></span></span>\n...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>stencil-router</span><span class=\"token punctuation\">></span></span></code></pre>\n</highlight-code-line>\n<p>Within the <code>stencil-router</code> element, we want to declare our set of <code>stencil-route</code>s. Each <code>stencil-route</code> needs to take a reference to the router, a url, and then an HTML element tag name.</p>\n\n<highlight-code-line >\n  <pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-router</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>landing-page<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">exact</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{true}/</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/demos<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>demos-page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/demos/rendering<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fiber-demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/docs<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>docs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/docs/getting-started<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>getting-started<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/components<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>basics-components<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>stencil-router</span><span class=\"token punctuation\">></span></span></code></pre>\n</highlight-code-line>\n<p>When navigating to <code>/demos/rendering</code> based on the above configuration, the <code>demos-page</code> component will be loaded with a child component <code>fiber-demo</code>. They will both be loaded as children of their corresponding stencil-routes but they are not related other than both match the route. Nested routes/components just work.</p>\n<h2 id=\"navigating\">Navigating</h2>\n<h3 id=\"navigating-statically\">Navigating Statically</h3>\n<p>To navigate around an app, use the <code>stencil-route-link</code> component.</p>\n\n<highlight-code-line >\n  <pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route-link</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route-link</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/demos<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route-link</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/docs/getting-started<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n</highlight-code-line>\n<h3 id=\"navigating-programmatically\">Navigating Programmatically</h3>\n<p>If you are in a routed component ( a component that has been included in a <code>stencil-route</code>) and would like to navigate programmatically you first need to pass the router history in as a Prop to your component. Below is an example of this:</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RouterHistory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/router'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">askPage</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> history<span class=\"token punctuation\">:</span> RouterHistory<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</highlight-code-line>\n<p>You can then use the following methods on the history object to navigate:</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// pushing a route (going forwards to a certain route)</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/demos`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// navigate back as if the user hit the back button in the browser</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">goBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// navigate forwards as if the user hit the forwards button in the browser</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">goForward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// replace the current nav history and reset to a certain route</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// navigate through the history stack by `n` entries</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</highlight-code-line>\n<h2 id=\"url-params\">URL Params</h2>\n<p>You may be familiar with the concept of URL params from <a href=\"https://reacttraining.com/react-router/web/example/url-params\">React Router</a>. URL params allow you to pass data to a component through the route. To set this up in the Stencil router we first need to set up our route to take a param. Here is an example:</p>\n\n<highlight-code-line >\n  <pre class=\"language-markup\"><code class=\"language-markup\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>/show/:pageNum<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>show-page<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n</highlight-code-line>\n<p>The key part in this route is the <code>:pageNum</code> syntax. This means that we can now pass data to that route and it will be accessible through the <code>pageNum</code> variable. Below is an example of how we would pass data to this route:</p>\n\n<highlight-code-line >\n  <pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>stencil-route-link</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{`/show/${someData}`}</span> <span class=\"token punctuation\">/></span></span></code></pre>\n</highlight-code-line>\n<p>Now let&#39;s go over how to access this data from the <code>show-page</code> component we are routing to.</p>\n<p>First, we need to pass the <code>match</code> prop to our <code>show-page</code> component:</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MatchResults <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/router'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShowPage</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> match<span class=\"token punctuation\">:</span> MatchResults<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</highlight-code-line>\n<p>Then we can use that <code>match</code> prop to access our data:</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// myData is now the data we passed in our stencil-route-link above</span>\n<span class=\"token keyword\">const</span> myData <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>pageNum<span class=\"token punctuation\">;</span></code></pre>\n</highlight-code-line>\n<stencil-route-link url=\"/docs/unit-testing\" router=\"#router\" custom=\"true\">\n  <button class=\"pull-left btn btn--secondary\">\n    Back\n  </button>\n</stencil-route-link>\n\n<stencil-route-link url=\"/docs/framework-integration\" custom=\"true\">\n  <button class='pull-right btn btn--primary'>\n    Next\n  </button>\n</stencil-route-link>\n"}