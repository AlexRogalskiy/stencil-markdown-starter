{"title":"Handling arrays and objects","description":"Stencil has a number of add-ons that you can use with the build process.","contributors":["jthoms1"],"srcPath":"./src/docs-md/reference/reactive-data.md","content":"<h1 id=\"handling-arrays-and-objects\">Handling arrays and objects</h1>\n<p>Stencil components update when props or state on a component change. For performance and simplicity, Stencil only compares references for changes, and will not re-render when data inside of an array or object changes.</p>\n<p>To update array or object data, use the following techniques which are fast-becoming a core part of the modern JavaScript  toolbox.</p>\n<h3 id=\"updating-arrays\">Updating arrays</h3>\n<p>For arrays, this means that the standard mutable array operations such as <code>push()</code> and <code>unshift()</code> won&#39;t work. Instead, non-mutable array operators such as <code>map()</code> and <code>filter()</code>, and the ES6 spread operator syntax, should be used as they return a copy of a new array.</p>\n<p>For example, to push a new item to an array, create a new array with the existing values and the new value at the end:</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// our original array</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ionic'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'stencil'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'webcomponents'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// update the array</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'awesomeness'</span>\n<span class=\"token punctuation\">]</span></code></pre>\n</highlight-code-line>\n<p>The <code>...this.items</code> syntax is a relatively new feature of JavaScript that &quot;expands&quot; the given object in place. Read more about the Spread operator <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\">here</a>.</p>\n<h3 id=\"updating-an-object\">Updating an object</h3>\n<p>The spread operator should also be used to update objects. As with arrays, mutating an object will not trigger a view update in Stencil, but returning a new copy of the object will. Below is an example:</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// our original object</span>\n<span class=\"token keyword\">let</span> myCoolObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>first<span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">:</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// update our object</span>\nmyCoolObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>myCoolObject<span class=\"token punctuation\">,</span> third<span class=\"token punctuation\">:</span> <span class=\"token string\">'3'</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n</highlight-code-line>\n<stencil-route-link url=\"/docs/events\" router=\"#router\" custom=\"true\">\n  <button class=\"pull-left btn btn--secondary\">\n    Back\n  </button>\n</stencil-route-link>\n\n<stencil-route-link url=\"/docs/templating-jsx\" custom=\"true\">\n  <button class=\"pull-right btn btn--primary\">\n    Next\n  </button>\n</stencil-route-link>\n"}