{"srcPath":"./src/docs-md/reference/events.md","content":"<h1 id=\"events\">Events</h1>\n<p>Components can emit data and events using the Event Emitter decorator.</p>\n<p>To dispatch <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\">Custom DOM events</a> for other components to handle, use the <code>@Event()</code> decorator.</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Event<span class=\"token punctuation\">,</span> EventEmitter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoList</span> <span class=\"token punctuation\">{</span>\n\n  @<span class=\"token function\">Event</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> todoCompleted<span class=\"token punctuation\">:</span> EventEmitter<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">todoCompletedHandler</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">:</span> Todo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todoCompleted<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</highlight-code-line>\n<p>The code above will dispatch a custom DOM event called <code>todoCompleted</code>.</p>\n<h2 id=\"listening-for-events\">Listening for Events</h2>\n<p>The <code>Listen()</code> decorator is for handling events dispatched from <code>@Events</code>.</p>\n<p>In the example below, assume that a child component, <code>TodoList</code>, emits a <code>todoCompleted</code> event using the <code>EventEmitter</code>.</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Listen <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoApp</span> <span class=\"token punctuation\">{</span>\n\n  @<span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todoCompleted'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">todoCompletedHandler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">:</span> CustomEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Received the custom todoCompleted event: '</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</highlight-code-line>\n<p>Handlers can also be registered for an event on a specific element.\nThis is useful for listening to application-wide events.\nIn the example below, we&#39;re going to listen for the scroll event.</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Listen <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoList</span> <span class=\"token punctuation\">{</span>\n\n  @<span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body:scroll'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">handleScroll</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the body was scrolled'</span><span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</highlight-code-line>\n<p>For keyboard events, you can use the standard <code>keydown</code> event in <code>@Listen()</code> and then figure out the key code, or some constants Stencil provides.</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\">@<span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">handleKeyDown</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">===</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'down arrow pressed'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown.up'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">handleUpArrow</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'will fire when up arrow is pressed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</highlight-code-line>\n<p>Stencil provides constants for the following keys, accessible via <code>keydown.&lt;CONSTANT&gt;</code></p>\n<ul>\n<li>enter</li>\n<li>escape</li>\n<li>space</li>\n<li>tab</li>\n<li>left</li>\n<li>up</li>\n<li>right</li>\n<li>down</li>\n</ul>\n<h2 id=\"using-events-in-jsx\">Using events in JSX</h2>\n<p>You can also bind listeners to events directly in JSX. This works very similar to normal DOM events such as <code>onClick</code>.</p>\n<p>Lets use our TodoList component from above:</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Event<span class=\"token punctuation\">,</span> EventEmitter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoList</span> <span class=\"token punctuation\">{</span>\n\n  @<span class=\"token function\">Event</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> todoCompleted<span class=\"token punctuation\">:</span> EventEmitter<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">todoCompletedHandler</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">:</span> Todo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todoCompleted<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n</highlight-code-line>\n<p>We can now listen to this event directly on the component in our JSX using the following syntax:</p>\n\n<highlight-code-line >\n  <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>todo-list</span> <span class=\"token attr-name\">onTodoCompleted</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ev <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">someMethod</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>todo-list</span><span class=\"token punctuation\">></span></span></code></pre>\n</highlight-code-line>\n<stencil-route-link url=\"/docs/decorators\" router=\"#router\" custom=\"true\">\n  <button class=\"pull-left btn btn--secondary\">\n    Back\n  </button>\n</stencil-route-link>\n\n<stencil-route-link url=\"/docs/reactive-data\" custom=\"true\">\n  <button class=\"pull-right btn btn--primary\">\n    Next\n  </button>\n</stencil-route-link>\n"}